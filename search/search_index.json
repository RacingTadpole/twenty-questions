{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Learn To Program in Python We are going to write a text game where you think of an animal, and the program asks questions to try and guess what it is. The program will not be a very good guesser at first, but it will learn new animals the more you play it. These lessons came out of teaching my 13-year-old son to program in Python, and I hope they may be useful for you too. Installing everything you need is probably the hardest part. If you can do that, the lessons should be a breeze :-) . Part 1 Lesson 1: Print and Input Lesson 2: If Lesson 3: More about Variables Lesson 4: For Loops Lesson 5: While Loops","title":"Home"},{"location":"#learn-to-program-in-python","text":"We are going to write a text game where you think of an animal, and the program asks questions to try and guess what it is. The program will not be a very good guesser at first, but it will learn new animals the more you play it. These lessons came out of teaching my 13-year-old son to program in Python, and I hope they may be useful for you too. Installing everything you need is probably the hardest part. If you can do that, the lessons should be a breeze :-) . Part 1 Lesson 1: Print and Input Lesson 2: If Lesson 3: More about Variables Lesson 4: For Loops Lesson 5: While Loops","title":"Learn To Program in Python"},{"location":"lessons/001-print-and-input/","text":"Lesson 1: Print and Input See if you can guess what this program will do: print('Hello!') Type it into a python interpreter and check. We found putting it into a new file in Visual Studio Code, and then clicking the green \"play\" button, works well. How about this program? print('Hello!') input('What is your name? ') What if you want to do something with the name the person types in? How about this: x = input('What is your name? ') print('Hello ' + x + '!') Notice how + \"adds\" the parts of the sentence together? Programmers call text like this \"strings\" for some reason. What do you think the next program would do? q = 'What is your name? ' x = input(q) print('Hello ' + x + '!')","title":"Lesson 1: Print and Input"},{"location":"lessons/001-print-and-input/#lesson-1-print-and-input","text":"See if you can guess what this program will do: print('Hello!') Type it into a python interpreter and check. We found putting it into a new file in Visual Studio Code, and then clicking the green \"play\" button, works well. How about this program? print('Hello!') input('What is your name? ') What if you want to do something with the name the person types in? How about this: x = input('What is your name? ') print('Hello ' + x + '!') Notice how + \"adds\" the parts of the sentence together? Programmers call text like this \"strings\" for some reason. What do you think the next program would do? q = 'What is your name? ' x = input(q) print('Hello ' + x + '!')","title":"Lesson 1: Print and Input"},{"location":"lessons/002-if/","text":"Lesson 2: If What do you think this would do? print('Welcome to Twenty Questions') print('Please think of an animal or plant, and I will try to guess what it is by asking questions.') print('Please answer questions with \"y\" or \"n\"') print() x = input('Does your animal fly? ') print('You said '+x) if x == 'y': print('I think your animal is a fruit bat.') if x == 'n': print('I think your animal is a wombat.') Notice the colon where you might think the word \"then\" should be (that's just a python thing, some other computer languages actually use \"then\"). And notice the indenting to show what falls under the \"if\". If that's too easy, what about this one? x = input('Does your animal fly? ') if x == 'y': xy = input('Is your flying animal a bird? ') if xy == 'y': print('I think your animal is a pelican.') if xy == 'n': print('I think your animal is a fruit bat.') if x == 'n': print('I think your animal is a wombat.') It's starting to look a bit like our game now! It would get boring to write this out for too many more questions, right? Wouldn't it be nice to put this in a loop somehow?","title":"Lesson 2: If"},{"location":"lessons/002-if/#lesson-2-if","text":"What do you think this would do? print('Welcome to Twenty Questions') print('Please think of an animal or plant, and I will try to guess what it is by asking questions.') print('Please answer questions with \"y\" or \"n\"') print() x = input('Does your animal fly? ') print('You said '+x) if x == 'y': print('I think your animal is a fruit bat.') if x == 'n': print('I think your animal is a wombat.') Notice the colon where you might think the word \"then\" should be (that's just a python thing, some other computer languages actually use \"then\"). And notice the indenting to show what falls under the \"if\". If that's too easy, what about this one? x = input('Does your animal fly? ') if x == 'y': xy = input('Is your flying animal a bird? ') if xy == 'y': print('I think your animal is a pelican.') if xy == 'n': print('I think your animal is a fruit bat.') if x == 'n': print('I think your animal is a wombat.') It's starting to look a bit like our game now! It would get boring to write this out for too many more questions, right? Wouldn't it be nice to put this in a loop somehow?","title":"Lesson 2: If"},{"location":"lessons/003-variables/","text":"Lesson 3: More about Variables Let's learn one more thing before we get to loops. Remember we had q = 'What is your name? ' x = input(q) print('Hello ' + x + '!') Programmers call q and x \"variables\", because they can vary. These variables are \"strings\" - they contain text. (Remember programmers call text \"strings\" for some reason.) Variables can be other types of things too. In order to do maths, you might expect numbers, and these are called \"integers\" (for whole numbers) and \"floats\" (for decimal numbers - the word \"float\" was picked originally because the computer stores them in a way that lets the decimal place \"float\" a long way to the left or right).","title":"Lesson 3: More about Variables"},{"location":"lessons/003-variables/#lesson-3-more-about-variables","text":"Let's learn one more thing before we get to loops. Remember we had q = 'What is your name? ' x = input(q) print('Hello ' + x + '!') Programmers call q and x \"variables\", because they can vary. These variables are \"strings\" - they contain text. (Remember programmers call text \"strings\" for some reason.) Variables can be other types of things too. In order to do maths, you might expect numbers, and these are called \"integers\" (for whole numbers) and \"floats\" (for decimal numbers - the word \"float\" was picked originally because the computer stores them in a way that lets the decimal place \"float\" a long way to the left or right).","title":"Lesson 3: More about Variables"},{"location":"lessons/004-for-loops/","text":"Lesson 4: For loops","title":"Lesson 4: For loops"},{"location":"lessons/004-for-loops/#lesson-4-for-loops","text":"","title":"Lesson 4: For loops"},{"location":"lessons/005-while-loops/","text":"Lesson 5: While Loops x = 0 while x < 10: y = input('say a number') x = int(y) Now you understand variables, \"if\"s and loops, you basically understand programming!","title":"Lesson 5: While Loops"},{"location":"lessons/005-while-loops/#lesson-5-while-loops","text":"x = 0 while x < 10: y = input('say a number') x = int(y) Now you understand variables, \"if\"s and loops, you basically understand programming!","title":"Lesson 5: While Loops"}]}